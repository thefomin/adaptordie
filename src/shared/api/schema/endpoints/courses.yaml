schemas:
  Course:
    type: object
    properties:
      id: { type: string, example: "uuid" }
      title: { type: string, example: "Основы программирования" }
      description: { type: string, example: "Изучите основы программирования с нуля" }
      cost_time: { type: integer, example: 1200 }
      reward_knowledge: { type: integer, example: 15 }

  CourseWithLessons:
    allOf:
      - $ref: '#/schemas/Course'
      - type: object
        properties:
          lessons:
            type: array
            items:
              $ref: './lessons.yaml#/schemas/Lesson'

  CreateCourse:
    type: object
    required: [title, description, cost_time, reward_knowledge]
    properties:
      title: { type: string }
      description: { type: string }
      cost_time: { type: integer }
      reward_knowledge: { type: integer }
      lessons:
        type: array
        items:
          $ref: './lessons.yaml#/schemas/Lesson'

  UpdateCourse:
    type: object
    properties:
      title: { type: string }
      description: { type: string }
      cost_time: { type: integer }
      reward_knowledge: { type: integer }
      lessons:
        type: array
        items:
          $ref: './lessons.yaml#/schemas/Lesson'

getAllCourses:
  summary: Список курсов
  tags: [Courses]
  security:
    - bearerAuth: []
  responses:
    '200':
      description: Массив курсов
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/schemas/Course'

getCourseById:
  summary: Получить курс с уроками
  tags: [Courses]
  security:
    - bearerAuth: []
  parameters:
    - in: path
      name: courseId
      required: true
      schema: { type: string }
  responses:
    '200':
      description: Курс
      content:
        application/json:
          schema:
            $ref: '#/schemas/CourseWithLessons'

createCourse:
  summary: Создать новый курс
  tags: [Courses]
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/CreateCourse'
  responses:
    '201':
      description: Успешное создание
      content:
        application/json:
          schema:
            $ref: '#/schemas/CourseWithLessons'

updateCourse:
  summary: Обновить курс
  tags: [Courses]
  security:
    - bearerAuth: []
  parameters:
    - in: path
      name: courseId
      required: true
      schema: { type: string }
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/UpdateCourse'
  responses:
    '200':
      description: Обновленный курс
      content:
        application/json:
          schema:
            $ref: '#/schemas/CourseWithLessons'

deleteCourse:
  summary: Удалить курс
  tags: [Courses]
  security:
    - bearerAuth: []
  parameters:
    - in: path
      name: courseId
      required: true
      schema: { type: string }
  responses:
    '204':
      description: Курс успешно удален
