openapi: 3.0.0
info:
  title: adaptordie API
  version: 1.0.0
  description: |
    Образовательная платформа с игровыми механиками: - текстовые и видео уроки - начисление опыта знаний - система рангов - ограниченное время (ресурс)
servers:
  - url: http://localhost:3000/api
tags:
  - name: Auth
  - name: Users
  - name: Courses
  - name: Lessons
  - name: Progress
  - name: Cron
paths:
  /auth/register:
    post:
      summary: Регистрация нового пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
  /auth/login:
    post:
      summary: Авторизация пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /auth/refresh:
    post:
      summary: Refresh access token
      parameters:
        - in: cookie
          name: refreshToken
          schema:
            type: string
      responses:
        '200':
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /users/me:
    get:
      summary: Профиль текущего пользователя
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Данные пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  time:
                    type: integer
                  knowledge:
                    type: integer
                  rank:
                    type: string
  /courses:
    get:
      summary: Список курсов
      tags:
        - Courses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Массив курсов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
  /courses/{courseId}:
    get:
      summary: Получить курс с уроками
      tags:
        - Courses
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Курс
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWithLessons'
  /lessons/{lessonId}:
    get:
      summary: Получить урок
      tags:
        - Lessons
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: lessonId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Урок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
  /lessons/{lessonId}/complete:
    post:
      summary: Завершить урок
      tags:
        - Lessons
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: lessonId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Урок завершен, опыт начислен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  knowledgeReward:
                    type: integer
                  totalKnowledge:
                    type: integer
                  rank:
                    type: string
  /progress:
    get:
      summary: Прогресс пользователя
      tags:
        - Progress
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Прогресс
          content:
            application/json:
              schema:
                type: object
                properties:
                  completedCourses:
                    type: integer
                  knowledge:
                    type: integer
                  rank:
                    type: string
                  time:
                    type: integer
  /cron/daily:
    post:
      summary: Списание времени за бездействие
      tags:
        - Cron
      responses:
        '200':
          description: Обновление пользователей
          content:
            application/json:
              schema:
                type: object
                properties:
                  updatedUsers:
                    type: integer
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    User:
      type: object
      required:
        - id
        - email
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        time:
          type: integer
        knowledge:
          type: integer
        rank:
          type: string
        lastActive:
          type: string
          format: date-time
    AuthResponse:
      type: object
      required:
        - accessToken
        - user
      properties:
        accessToken:
          type: string
        user:
          $ref: '#/components/schemas/User'
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    Course:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        cost_time:
          type: integer
        reward_knowledge:
          type: integer
    Lesson:
      type: object
      properties:
        id:
          type: string
        courseId:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
            - text
            - video
        content:
          type: string
        videoUrl:
          type: string
        cost_time:
          type: integer
        reward_knowledge:
          type: integer
    CourseWithLessons:
      allOf:
        - $ref: '#/components/schemas/Course'
        - type: object
          properties:
            lessons:
              type: array
              items:
                $ref: '#/components/schemas/Lesson'
  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
